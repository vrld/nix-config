#!/usr/bin/env zsh

usage() {
  echo -e "Usage: $(basename $0) [-h|--help] PASSNAME [KEY]\n"
  echo "Search secret PASSNAME for an entry KEY and print it"
  echo -e "If KEY is omitted, retrieve the first line instead.\n"
  echo "Options:"
  echo "  -h|--help   Shows this help"
  echo "  -k|--keys   Lists keys of secrePASSNAME"
  return 0
}

OPTIONS=$(getopt -o 'hk' -l 'h-help,k-keys' -n ${0} -- "${@}")
test ${?} -ne 0 && usage && exit 1
eval set -- "${OPTIONS}"
unset OPTIONS

while true; do
  case "${1}" in
    '-h'|'--help') usage && exit 0 ;;
    '-k'|'--keys')
      show_keys=yes
      shift
      ;;
    '--')
      shift
      break
  esac
done

password="${1}"
test -z "${password}" && exec pass

if test "${show_keys}" = "yes"; then
  echo "password"
  # TODO: handle misc:\n
  # stuff\n
  # \n
  pass show ${password} | sed -n '2,${/^[^:]\+:/{ /^otpauth:/d; s/:.*$//p; }}'
  exit 0
fi

key="${2}"
case "${key}" in
  ''|'password')
    pass show ${password} | head -n1
    ;;
  'misc')
    echo "NOT IMPLEMENTED"
    exit 1
    ;;
  *)
    out=$(pass show ${password} | sed -n "/^${key}:/s/^${key}:[[:blank:]]\+//p")
    test -n "${out}" && echo ${out} && exit 0

    # multiline key
    pass show ${password} | sed -n "/^${key}:$/,/^$/{ /^${key}:$/d; /^$/d; p; }"
    ;;
esac
