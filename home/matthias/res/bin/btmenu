#!/usr/bin/env zsh

set -e -o pipefail

commands() {
  cat <<EOF
connect		Connect device
disconnect	Disconnect device
power		Set controller power
select		Select default controller
list		List available controllers
scan		Scan for devices
pair		Pair with device
paired-devices	List paired devices
show		Controller information
devices		List available devices
system-alias	Set controller alias
reset-alias	Reset controller alias
pairable	Set controller pairable mode
discoverable	Set controller discoverable mode
discoverable-timeout	Set discoverable timeout
agent		Enable/disable agent with given capability
default-agent	Set agent as the default one
advertise	Enable/disable advertising with given type
set-alias	Set device alias
info		Device information
cancel-pairing	Cancel pairing with device
trust		Trust device
untrust		Untrust device
block		Block device
unblock		Unblock device
remove		Remove device
EOF
}

menu() {
  typeset -a fzfprompt
  if [[ ! -z "${1}" ]]; then
    fzfprompt=(--prompt ${1})
    shift
  fi
  fzf +s --height=100% --reverse ${fzfprompt} $@
}

anykey() {
  echo -n "\033[38;5;8mPress any key to continue\033[0m"
  read -rsk
}

typeset command
typeset -l description

while [ 0 ]; do
  if [[ $# -lt 1 ]]; then
    selection=$(commands | menu)
    command=$(echo ${selection} | cut -f1)
    description=$(echo ${selection} | sed -E "s/^${command}\\s*//")
  else
    command=$1
  fi

  [[ -z ${command} ]] && exit

  case ${command} in
    connect|info|pair|cancel-pairing|trust|untrust|block|unblock|remove|connect|disconnect)
      device=$(bluetoothctl devices \
        | sed -E 's/^Device ([^ ]+) (.*)/\2 \1/' \
        | menu "[${command}] ${description}" \
        | sed -E 's/^.* //')
      [[ -z ${device} ]] || bluetoothctl ${command} ${device}
      ;;
    select|show)
      controller=$(bluetoothctl list \
        | sed -E 's/^Controller ([^ ]+) (.*)/\2 \1/' \
        | menu "[${command}] ${description}" \
        | sed -E 's/^.* //')
      if [[ -z ${controller} ]]; then
        bluetoothctl ${command} ${controller}
        anykey
      fi
      ;;
    power|pairable|discoverable|scan)
      switch=$(echo "on\noff" | menu "[${command}] ${description}")
      [[ -z ${switch} ]] || bluetoothctl ${command} ${switch}
      ;;
    discoverable-timeout|system-alias)
      echo -n "[${command}] ${description}\nvalue = "
      read value
      bluetoothctl ${command} ${value}
      ;;
    *)
      bluetoothctl ${command}
      anykey
  esac
done
