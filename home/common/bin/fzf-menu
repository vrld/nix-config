#!/usr/bin/env zsh

set -ex

cachedir=${XDG_CACHE_HOME:-"$HOME/.cache"}
db="$cachedir/fzf-menu.db"
[[ -d "$cachedir" ]] || db="$HOME/.fzf-menu.db"

# test if we need to update the cache
paths=(${(@s/:/)PATH})
zmodload zsh/stat
update_cache=false
cache_mtime=-1
[[ -f ${cache} ]] && cache_mtime=$(zstat +mtime -- ${cache} 2>/dev/null)
for dir in ${paths}; do
  if [[ -d ${dir} && -r ${dir} ]]; then # is readable dir
    dir_mtime=$(zstat +mtime -- ${dir} 2>/dev/null)
    if (( dir_mtime > cache_mtime )); then
      update_cache=true
      break
    fi
  fi
done

# list executable files into the cache (basename only)
if [[ $update_cache == true || ! -f ${cache} ]]; then
  fd_args=(--type executable --type symlink --unrestricted --format {/})
  for dir in ${paths}; do
    [[ -d ${dir} && -r ${dir} ]] && fd_args+=(--search-path ${dir})
  done
  fd ${fd_args} 2>/dev/null | sort -u | TERM_USAGE_DB="$db" term-cache init
fi

command=$(TERM_USAGE_DB="$db" term-cache frequent | fzf --height=100% +s --reverse --pointer='➤' --prompt='➤ ')

[[ ${?} -eq 0 ]] || exit
TERM_USAGE_DB="$db" term-cache use ${command}

case $XDG_CURRENT_DESKTOP in
  sway) swaymsg exec ${command} ;;
  niri) niri msg action spawn -- ${command} ;;
  *) notify-send -u critical "Cannot spawn process" "Not a known session type: $XDG_CURRENT_DESKTOP"
esac
